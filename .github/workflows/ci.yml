name: Build & Push
# Checking trigger
on:
  push:
    branches: 
    - main
    paths:
      - "docker-app/**"
      - "k8s-deployment/**"
  workflow_dispatch:

env:
  DOCKER_APP_NAME: lbohdan93/playground-gitops
  K8S_NAMESPACE: gitops-play

jobs:
  build-and-push-docker-image:
    name: Build Docker image and push to dockerhub repo
    runs-on: 
    # - ubuntu-latest
    - self-hosted
    - Linux
    - k8s-runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Docker Buildx
        run: |
          mkdir -p "$HOME/.docker/cli-plugins"
          curl -SsL "https://github.com/docker/buildx/releases/download/v0.7.1/buildx-v0.7.1.linux-amd64" -o "$HOME/.docker/cli-plugins/docker-buildx"
          chmod +x "$HOME/.docker/cli-plugins/docker-buildx"

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./docker-app
          file: ./docker-app/Dockerfile
          push: true
          tags: ${{ env.DOCKER_APP_NAME }}:${{ github.sha }}

  update-k8s-manifest:
    name: update manifest
    runs-on:
    - self-hosted
    - Linux
    - k8s-runner

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: update manifest
      working-directory: k8s-deployment
      run: |
        sed -e 's#image: .*$#image: ${{ env.DOCKER_APP_NAME }}:${{ github.sha }}#g' deployment.yaml
        sed -e 's#namespace: .*$#namespace: {{ env.K8S_NAMESPACE }}#g' deployment.yaml

  # deploy-to-k8s:
  #   name: update manifest & deploy to k8s
  #   needs: build-and-push-docker-image
  #   runs-on:
  #   - self-hosted
  #   - Linux
  #   - k8s-runner
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Testing k8s api from runners
  #       working-directory: k8s-deployment
  #       run: |
  #         set -ex
  #         wget --quiet https://dl.k8s.io/release/v1.26.0/bin/linux/amd64/kubectl
  #         chmod +x ./kubectl
  #         sed -i "s#to_be_replaced_image#${{ env.DOCKER_APP_NAME }}:${{ github.sha }}#g" deployment.yaml
  #         sed -i "s#to_be_replaced_ns#${{ env.K8S_NAMESPACE }}#g" deployment.yaml
  #         ./kubectl apply -f deployment.yaml

